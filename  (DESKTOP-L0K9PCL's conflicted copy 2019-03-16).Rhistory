pam2
pamg2
s0w <- spread(s0, week, m)
s0 <- pamg[pamg$uid == 0, c("week", "day", "m")]
s0w <- spread(s0, week, m)
s0w
s0 <- pamg[pamg2$uid == 0, c("week", "day", "m")]
s0w <- spread(s0, week, m)
s0w
s0
s0 <- pamg2[pamg2$uid == 0, c("week", "day", "m")]
s0w <- spread(s0, week, m)
s0w
ggseasonplot(s0w, year.labels=TRUE, year.labels.left=TRUE)
s0wts <- ts(s0w)
s0ws
s0wts
ggseasonplot(s0w, year.labels=TRUE, year.labels.left=TRUE)
ggseasonplot(s0wts, year.labels=TRUE, year.labels.left=TRUE)
s0wts <- ts(s0w, frequency = 7)
ggseasonplot(s0wts, year.labels=TRUE, year.labels.left=TRUE)
s0wts
beer2
beer2 <- window(ausbeer, start = 1992)
beer2
s0w <- spread(s0, week, m)
s0w
beer2
class(beer2)
pamg
pamg2
?ts
pamg2$days
pamg2$day
levels(pamg2$day)
seq_along(levels(pamg2$day))
s0 <- pamg[pamg$uid == 0, "m"]
s0w <- ts(s0, frequency = 7)
ggseasonplot(s0w, year.labels=TRUE, year.labels.left=TRUE)
s0w
s0d <- ts(s0)
s0d
X11(); gglagplot(s0d, lags = 3)
X11(); gglagplot(beer2, lags = 3)
X11(); gglagplot(beer2, set.lags = 5)
X11(); gglagplot(beer2, set.lags = 10)
X11(); gglagplot(beer2, lags = 8)
X11(); gglagplot(s0d, set.lags = 7)
X11(); gglagplot(s0d, set.lags = c(1,7))
X11(); gglagplot(s0d, set.lags = c(1,3,7))
X11(); gglagplot(s0d, lags = 7)
si <- pamg[pamg$uid == 1, "m"]
siw <- ts(si, frequency = 7)
ggseasonplot(siw, year.labels=TRUE, year.labels.left=TRUE)
sid <- ts(si)
X11(); gglagplot(sid, lags = 7)
ggAcf(s0d)
?ggAcf
ggAcf(s0d, lag.max = 7)
# Average student
sm <- pamg %>% group_by(day) %>%
summarise(m = mean(m)) %>%
ungroup()
sm
?mean
# Average student
sm <- pamg %>% group_by(day) %>%
summarise(m = mean(m, na.rm = TRUE)) %>%
ungroup()
sm
unique(c(1, NA))
max(c(1, NA))
max(c(1, NA), na.rm = TRUE)
pamg <- pam %>% group_by(uid, day) %>%
summarise(m = mean(picture_idx, na.rm = TRUE), week = max(week)) %>%
ungroup() %>%
subset(week >= 1 & week <= 10)
# Add NA values where days are missing
w <- as.integer(min(pamg$week):max(pamg$week))
d <- min(pamg$day):max(pamg$day)
s <- unique(pamg$uid)
scol <- rep(s, each = length(d))
dcol <- rep(d, length(s))
wcol <- rep(rep(w, each = 7), length(s))
full_days <- tibble(uid = scol, day = dcol, week = wcol)
pamg <- right_join(pamg, full_days, by = c("uid","day","week"))
pamg
# Student u00
s0 <- pamg[pamg$uid == 0, "m"]
# Weekly season plot for student u00
s0w <- ts(s0, frequency = 7)
ggseasonplot(s0w, year.labels=TRUE, year.labels.left=TRUE)
# Lagplot and autocorrelation function for student u00
s0d <- ts(s0)
X11(); gglagplot(s0d, lags = 7)
ggAcf(s0d, lag.max = 7)
# Average student
sm <- pamg %>% group_by(day) %>%
summarise(m = mean(m, na.rm = TRUE)) %>%
ungroup()
sm
smw <- ts(sm, frequency = 7)
ggseasonplot(smw, year.labels=TRUE, year.labels.left=TRUE)
smw
sm
smw <- ts(sm$m, frequency = 7)
smw <- ts(sm$m, frequency = 7)
ggseasonplot(smw, year.labels=TRUE, year.labels.left=TRUE)
smd <- ts(sm$m)
X11(); gglagplot(smd, lags = 7)
ggAcf(smd, lag.max = 7)
X11(); gglagplot(smd, lags = 7)
pamg$uid
for (i in sample(unique(pamg$uid),10) ) {
s0 <- pamg[pamg$uid == i, c("day","m")]
s0d <- ts(s0$m)
X11(); ggAcf(s0d, lag.max = 7)
}
cor <- list()
for (i in sample(unique(pamg$uid),10) ) {
s0 <- pamg[pamg$uid == i, c("day","m")]
s0d <- ts(s0$m)
cor <- cor[[length(cor)+1]] <- ggAcf(s0d, lag.max = 7)
}
cor
cor
cor[[1]]
class(cor)
cor[[2]]
cor[[3]]
cor <- list()
for (i in sample(unique(pamg$uid),10) ) {
s0 <- pamg[pamg$uid == i, c("day","m")]
s0d <- ts(s0$m)
cor[[length(cor)+1]] <- ggAcf(s0d, lag.max = 7)
}
cor[[1]]
cor[[2]]
cor[[3]]
cor[[4]]
cor[[5]]
cor[[6]]
cor[[7]]
cor[[3]]
cor[[4]]
set.seed(0)
for (i in sample(unique(pamg$uid),10) ) {
s0 <- pamg[pamg$uid == i, c("day","m")]
s0d <- ts(s0$m)
cor[[length(cor)+1]] <- ggAcf(s0d, lag.max = 7)
}
cor[[1]]
cor[[2]]
cor[[3]]
cor[[4]]
# Random sample of 10 students
acf <- list()
set.seed(0)
for (i in sample(unique(pamg$uid),10) ) {
s0 <- pamg[pamg$uid == i, c("day","m")]
s0d <- ts(s0$m)
acf[[length(cor)+1]] <- ggAcf(s0d, lag.max = 7)
}
acf[[4]]
acf[[1]]
# Random sample of 10 students
acf <- list()
set.seed(0)
for (i in sample(unique(pamg$uid),10) ) {
s0 <- pamg[pamg$uid == i, c("day","m")]
s0d <- ts(s0$m)
acf[[length(acf)+1]] <- ggAcf(s0d, lag.max = 7)
}
acf[[4]]
acf[[1]]
acf[[1]]
acf[[2]]
acf[[3]]
acf[[4]]
acf[[5]]
acf[[6]]
acf[[7]]
acf[[8]]
acf[[9]]
acf[[10]]
set.seed(0)
for (i in sample(unique(pamg$uid),10) ) {
s0 <- pamg[pamg$uid == i, c("day","m")]
s0d <- ts(s0$m)
acf[[length(acf)+1]] <- ggAcf(s0d, lag.max = 7)
}
acf[[4]]
acf[[5]]
acf[[6]]
acf[[9]]
# Random sample of 10 students
acf <- list()
set.seed(0)
for (i in sample(unique(pamg$uid),10) ) {
s0 <- pamg[pamg$uid == i, c("day","m")]
s0d <- ts(s0$m)
acf[[length(acf)+1]] <- ggAcf(s0d, lag.max = 14)
}
acf[[4]]
acf[[5]]
acf[[6]]
acf[[9]]
# Random sample of 10 students
acf <- list()
set.seed(0)
for (i in sample(unique(pamg$uid),10) ) {
s0 <- pamg[pamg$uid == i, c("day","m")]
s0d <- ts(s0$m)
acf[[length(acf)+1]] <- ggAcf(s0d, lag.max = 28)
}
acf[[4]]
acf[[5]]
acf[[6]]
acf[[1]]
acf[[2]]
acf[[3]]
?ggAcf
acf[[4]] + xlab(c(7,14,21))
acf[[4]] + labs(c(7,14,21))
acf[[4]] + labs(breaks = 7)
acf[[4]] + scale_x_discrete(breaks = 7)
acf[[4]] + scale_x_continuous(breaks = 7)
?ggAcf
# Random sample of 10 students
acf <- list()
set.seed(0)
for (i in sample(unique(pamg$uid),10) ) {
s0 <- pamg[pamg$uid == i, c("day","m")]
s0d <- ts(s0$m)
acf[[length(acf)+1]] <- ggAcf(s0d, lag.max = 28, breaks = 7)
}
acf[[4]]
acf[[5]]
acf[[6]]
acf[[9]]
acf[[9]]
acf[[6]]
acf[[5]]
acf[[4]]
acf[[4]]
acf[[5]]
acf[[6]]
acf[[9]]
# Average student
sm <- pamg %>% group_by(day) %>%
summarise(m = mean(m, na.rm = TRUE)) %>%
ungroup()
smw <- ts(sm$m, frequency = 7)
ggseasonplot(smw, year.labels = TRUE, year.labels.left=TRUE)
smd <- ts(sm$m)
X11(); gglagplot(smd, lags = 7)
ggAcf(smd, lag.max = 7)
X11(); gglagplot(smd, lags = 28)
ggAcf(smd, lag.max = 7)
ggAcf(smd, lag.max = 28)
pamg
#
pamg %>% group_by(uid) %>%
summarise(total_days = n())
pamg <- pam %>% group_by(uid, day) %>%
summarise(m = mean(picture_idx, na.rm = TRUE), week = max(week)) %>%
ungroup() %>%
subset(week >= 1 & week <= 10)
#
pamg %>% group_by(uid) %>%
summarise(total_days = n())
#
pamg %>% group_by(uid) %>%
summarise(total_days = n()) %>%
ungroup() %>%
subset(total_days >= 60)
# Only 13 students have less than 10 missing days
strong_uids <- (pamg %>% group_by(uid) %>%
summarise(total_days = n()) %>%
ungroup() %>%
subset(total_days >= 60))$uid
strong_uids
pamg <- pamg[pamg$uid %in% strong_uids, ]
pamg
# Add NA values where days are missing
w <- as.integer(min(pamg$week):max(pamg$week))
d <- min(pamg$day):max(pamg$day)
s <- unique(pamg$uid)
scol <- rep(s, each = length(d))
dcol <- rep(d, length(s))
wcol <- rep(rep(w, each = 7), length(s))
full_days <- tibble(uid = scol, day = dcol, week = wcol)
pamg <- right_join(pamg, full_days, by = c("uid","day","week"))
pamg
pamg$m
sum(is.na(pamg$m))
# Total average number of NAs per student
sum(is.na(pamg$m))/sum(unique(pamg$uid))
source('C:/Users/danie/Dropbox/PhD/StudentLife/Code/Exploring/explore2.R', echo=TRUE)
# Total average number of NAs per student
sum(is.na(pamg$m))/length(unique(pamg$uid))
# Total average number of NAs per student
sum(is.na(pamg$m))/length(unique(pamg$uid))
# Student u00
s0 <- pamg[pamg$uid == 0, c("day","m")]
s0w <- ts(s0$m, frequency = 7)
ggseasonplot(s0w, year.labels=TRUE, year.labels.left=TRUE)
s0d <- ts(s0$m)
ggAcf(s0d, lag.max = 7)
# Average student
sm <- pamg %>% group_by(day) %>%
summarise(m = mean(m, na.rm = TRUE)) %>%
ungroup()
smw <- ts(sm$m, frequency = 7)
ggseasonplot(smw, year.labels = TRUE, year.labels.left=TRUE)
smw
smw %>%
ggplot(aes(x = day, y = mpam, group = week, col = week)) +
geom_line() + #facet_grid(~student) + #  scale_y_log10() +
xlab("Day") + ylab("Outcome") +
scale_color_gradientn(colours = rainbow(10)) +
transition_time(week) +
ease_aes('linear') +
shadow_mark(colour = "grey70") +
labs(title = 'Week: {frame_time}')
library(gganimate)
smw %>%
ggplot(aes(x = day, y = mpam, group = week, col = week)) +
geom_line() + #facet_grid(~student) + #  scale_y_log10() +
xlab("Day") + ylab("Outcome") +
scale_color_gradientn(colours = rainbow(10)) +
transition_time(week) +
ease_aes('linear') +
shadow_mark(colour = "grey70") +
labs(title = 'Week: {frame_time}')
pamg
# Average student
sm <- pamg %>% group_by(day) %>%
summarise(m = mean(m, na.rm = TRUE)) %>%
ungroup()
sm
sm2 %>% pamg %>% group_by(day, week) %>%
summarise(m = mean(m, na.rm = TRUE)) %>%
ungroup()
sm2 <- pamg %>% group_by(day, week) %>%
summarise(m = mean(m, na.rm = TRUE)) %>%
ungroup()
sm2
sm2 <- pamg %>%
studentlife::make_days_in_weeks() %>%
group_by(day, week) %>%
summarise(m = mean(m, na.rm = TRUE)) %>%
ungroup()
sm2
sm2 <- pamg %>%
studentlife::make_days_in_weeks() %>%
group_by(week, day) %>%
summarise(m = mean(m, na.rm = TRUE)) %>%
ungroup()
sm2 %>%
ggplot(aes(x = day, y = m, group = week, col = week)) +
geom_line() + #facet_grid(~student) + #  scale_y_log10() +
xlab("Day") + ylab("Outcome") +
scale_color_gradientn(colours = rainbow(10)) +
transition_time(week) +
ease_aes('linear') +
shadow_mark(colour = "grey70") +
labs(title = 'Week: {frame_time}')
smd <- ts(sm$m)
X11(); gglagplot(smd, lags = 7)
# We see no evidence that this isn't just white noise
ggAcf(smd, lag.max = 28)
# Random sample of 10 students
acf <- list()
set.seed(0)
for (i in sample(unique(pamg$uid),10) ) {
s0 <- pamg[pamg$uid == i, c("day","m")]
s0d <- ts(s0$m)
acf[[length(acf)+1]] <- ggAcf(s0d, lag.max = 28)
}
# We see no evidence that these aren't just white noise
acf[[4]]
acf[[5]]
acf[[6]]
acf[[9]]
# We see no evidence that this isn't just white noise
ggAcf(smd, lag.max = 28)
sm
pamg
pamg %>% group_by(uid) %>% summarise(m = mean(m))
pamg %>% group_by(uid) %>% summarise(m = mean(m, na.omit = TRUE))
pamg %>% group_by(uid) %>% summarise(m = mean(m, na.rm = TRUE))
pam_msd <- pam %>% group_by(uid) %>%
summarise(m = mean(picture_idx, na.rm = TRUE),
sd = sd(picture_idx, na.rm = TRUE))
pam_msd
pam <- pam %>% inner_join(pam, pam_msd, "uid")
pam <- pam %>% inner_join(pam, pam_msd, by = uid)
pam_msd
pam <- pam %>% inner_join(pam, pam_msd, by = "uid")
p <- "C:/Users/danie/Data/StudentLife/dataset/dataset"
pam <- studentlife::read_from_SL(menu1 = 2, menu2 = 22, prefix = p)
pam <- studentlife::timestamp_convert(pam)
# Find the mean and sd PAM for each student
library(tidyverse)
pam_msd <- pam %>% group_by(uid) %>%
summarise(m = mean(picture_idx, na.rm = TRUE),
sd = sd(picture_idx, na.rm = TRUE))
pam_msd <- pam %>% group_by(uid) %>%
summarise(m = mean(picture_idx, na.rm = TRUE),
sd = sd(picture_idx, na.rm = TRUE)) %>%
inner_join(pam, by = "uid")
pam_msd
pam_msd <- pam %>% group_by(uid) %>%
summarise(m = mean(picture_idx, na.rm = TRUE),
sd = sd(picture_idx, na.rm = TRUE)) %>%
inner_join(pam, by = "uid") %>%
mutate(picture_idx_n = (picture_idx - m)/sd )
pam_n <- pam %>% group_by(uid) %>%
summarise(m = mean(picture_idx, na.rm = TRUE),
sd = sd(picture_idx, na.rm = TRUE)) %>%
inner_join(pam, by = "uid") %>%
mutate(picture_idx_n = (picture_idx - m)/sd )
pam_n
# Group by day with mean PAM response
pamg <- pam_n %>% group_by(uid, day) %>%
summarise(m = mean(picture_idx_n, na.rm = TRUE), week = max(week)) %>%
ungroup() %>%
subset(week >= 1 & week <= 10)
pamg
# Only 13 students have less than 10 missing days in weeks 1 to 10
strong_uids <- (pamg %>% group_by(uid) %>%
summarise(total_days = n()) %>%
ungroup() %>%
subset(total_days >= 60))$uid
pamg <- pamg[pamg$uid %in% strong_uids, ]
pamg
# Add NA values where days are missing
w <- as.integer(min(pamg$week):max(pamg$week))
d <- min(pamg$day):max(pamg$day)
scol <- rep(s, each = length(d))
dcol <- rep(d, length(s))
s <- unique(pamg$uid)
wcol <- rep(rep(w, each = 7), length(s))
full_days <- tibble(uid = scol, day = dcol, week = wcol)
pamg <- right_join(pamg, full_days, by = c("uid","day","week"))
# Total average number of NAs per student
sum(is.na(pamg$m))/length(unique(pamg$uid))
### Student u00
s0 <- pamg[pamg$uid == 0, c("day","m")]
s0w <- ts(s0$m, frequency = 7)
ggseasonplot(s0w, year.labels=TRUE, year.labels.left=TRUE)
s0d <- ts(s0$m)
X11(); gglagplot(s0d, lags = 7)
ggAcf(s0d, lag.max = 7)
### Average student
sm <- pamg %>% group_by(day) %>%
summarise(m = mean(m, na.rm = TRUE)) %>%
ungroup()
smw <- ts(sm$m, frequency = 7)
ggseasonplot(smw, year.labels = TRUE, year.labels.left=TRUE)
smw
# Animated season plot
sm2 <- pamg %>%
studentlife::make_days_in_weeks() %>%
group_by(week, day) %>%
summarise(m = mean(m, na.rm = TRUE)) %>%
ungroup()
smd <- ts(sm$m)
X11(); gglagplot(smd, lags = 7)
# We see no evidence that this isn't just white noise
ggAcf(smd, lag.max = 28)
smd
devtools::document()
library(studentlife)
rm(list=ls())
p <- "C:/Users/danie/Data/StudentLife/dataset/dataset"
pam <- studentlife::read_from_SL(menu1 = 2, menu2 = 22, prefix = p)
pam <- studentlife::timestamp_convert(pam)
# Find the mean and sd PAM for each student
library(tidyverse)
pam_n <- pam %>% group_by(uid) %>%
summarise(m = mean(picture_idx, na.rm = TRUE),
sd = sd(picture_idx, na.rm = TRUE)) %>%
inner_join(pam, by = "uid") %>%
mutate(picture_idx_n = (picture_idx - m)/sd )
pam_n
# Group by day with mean PAM response
pamg <- pam_n %>% group_by(uid, day) %>%
summarise(m = mean(picture_idx_n, na.rm = TRUE), week = max(week)) %>%
ungroup() %>%
subset(week >= 1 & week <= 10)
pamg
pam_n <- pam %>% group_by(uid) %>%
summarise(m = mean(picture_idx, na.rm = TRUE),
sd = sd(picture_idx, na.rm = TRUE)) %>%
inner_join(pam, by = "uid")
pam_n
unique(pam_n$m)
unique(pam_n$sd)
pam_n <- pam %>% group_by(uid) %>%
summarise(m = mean(picture_idx, na.rm = TRUE),
sd = sd(picture_idx, na.rm = TRUE)) %>%
inner_join(pam, by = "uid") %>%
mutate(picture_idx_n = (picture_idx - m)/sd )
pam_n$picture_idx_n
strong_uids <- (pamg %>% group_by(uid) %>%
summarise(total_days = n()) %>%
ungroup() %>%
subset(total_days >= 60))$uid
pamg <- pamg[pamg$uid %in% strong_uids, ]
pamg
